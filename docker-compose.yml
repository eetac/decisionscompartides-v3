services:
  decisions-compartides:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./uploads:/app/uploads
    environment:
      - FLASK_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WEAVIATE_API_KEY=${WEAVIATE_API_KEY}
      - URL_CLUSTER=${URL_CLUSTER}
      # - URL_CLUSTER=http://weaviate:8080

#   weaviate:
#     command:
#     - --host
#     - 0.0.0.0
#     - --port
#     - '8080'
#     - --scheme
#     - http
#     image: semitechnologies/weaviate:1.27.3
#     ports:
#     - 8080:8080
#     - 50051:50051
#     volumes:
#     - weaviate_data:/var/lib/weaviate
#     restart: on-failure:0
#     environment:
#       QUERY_DEFAULTS_LIMIT: 25
#       AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
#       PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
#       DEFAULT_VECTORIZER_MODULE: 'text2vec-openai' # Habilita el m√≥dulo de OpenAI
#       ENABLE_MODULES: 'text2vec-openai'
#       OPENAI_APIKEY: '${OPENAI_API_KEY}' # Pasa la clave API de OpenAI
#       CLUSTER_HOSTNAME: 'Rag1'
# volumes:
#   weaviate_data:

# version: '3.8'
# services:
  weaviate:
    image: semitechnologies/weaviate:1.27.3
    ports:
      - 8080:8080
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'text2vec-openai'
      ENABLE_API_BASED_MODULES: 'true'
volumes:
  weaviate_data:
